--Retrieve All Movies in the Database
SELECT title
FROM film;

-- Retrieve movies with rental duration of more than 5 days
SELECT title, rental_duration
FROM film
WHERE rental_duration > 5;

-- Find the total number of movies in the database.
SELECT count(title) as "total movies"
FROM film;

-- 4. Find the number of movies in 
-- each rating category (e.g., PG, R).
SELECT rating, COUNT(title) AS "Total Movies"
FROM film
GROUP BY rating
ORDER BY "Total Movies" DESC, rating ASC
-- LIMIT 2
;

-- Calculate the total revenue 
-- generated by each staff member.
SELECT s.first_name || ' ' || s.last_name AS "Full Name", SUM(amount) AS "Total Revenue"
FROM payment as p
JOIN staff as s ON s.staff_id = p.staff_id
GROUP BY s.first_name, s.last_name
ORDER BY "Total Revenue" DESC;

-- Find the number of customers in each store.
SELECT store_id, count(*) as "Number of Customers"
FROM customer
GROUP BY store_id;

-- How can we classify different customers based on their spending tiers
-- low spender less than 70
-- middle spender between 70 and 100
-- high spender greater than 100
SELECT 
	c.first_name || ' ' || c.last_name AS "FullName", 
	sum(p.amount) total_rental,
	CASE WHEN SUM(p.amount) < 70 THEN 'Low Spender'
		WHEN SUM(p.amount) BETWEEN 70 AND 100 THEN 'Middle Spender'
		ELSE 'High Spender'
		END AS "Spending Tier"
FROM payment as p
JOIN customer as c ON p.customer_id = c.customer_id
GROUP BY c.first_name, c.last_name, p.customer_id;

--- top 10 most rented movies and number of times rented
SELECT f.title, COUNT(r.rental_id) AS "Num Rentals"
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON r.inventory_id = i.inventory_id
GROUP BY f.title
ORDER BY "Num Rentals" DESC
limit 10;

-- Are there any customers who have made payment without any recorded rentals
SELECT count(*)
FROM payment
WHERE rental_id IS NULL;

-- Which staff made the most rental?
SELECT staff_id, COUNT(rental_id) as "Num of Rentals"
FROM payment
GROUP BY staff_id;

-- Average Rental Duration Per Store
SELECT i.store_id, ROUND(AVG (f.rental_duration), 0) AS "Avg Rental Duration"
FROM film f
JOIN inventory i on f.film_id = i.film_id
GROUP BY i.store_id;

-- How much total revenue does each store generate 
-- and how much comes from late fee
-- late fee is amount paid for movies rented for more than 7 days

SELECT i.store_id, sum(p.amount) AS "Revenue Generated"
FROM rental r 
JOIN inventory i ON i.inventory_id = r.inventory_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY i.store_id
LIMIT 5;




